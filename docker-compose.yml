version: '3.5'

services:
    postgres:
        container_name: postgres_container
        image: postgres
        env_file:
            - 'variables.env'
        volumes:
            - ./database/postgres_vol:/data/postgres
        ports:
            - 5432:5432
        networks:
            postgres:
                ipv4_address: 10.5.0.6
        restart: unless-stopped

    pgadmin:
        container_name: pgadmin_container
        image: dpage/pgadmin4
        env_file:
            - 'variables.env'
        volumes:
            - ./database/pgadmin_vol:/var/lib/pgadmin
        ports:
            - 5050:80
        networks:
            - postgres
        restart: unless-stopped

    backend:
        container_name: backend_container
        build: app/backend
        image: backend
        volumes:
            - ./app/backend/backend_vol:/home
        env_file:
            - 'variables.env'
        networks:
            - postgres
        command: tail -f /dev/null # keeping the container alive
        restart: unless-stopped

    api:
        container_name: api_container
        build: app/api
        image: api
        volumes:
            - './app/api/api_vol:/code'
        env_file:
            - 'variables.env'
        ports:
            - '5000:5000'
            - '8000:8000'
        command: tail -f /dev/null # keeping the container alive
        networks:
            - postgres
        restart: unless-stopped

networks:
    postgres:
        driver: bridge
        ipam:
         config:
           - subnet: 10.5.0.0/16
             gateway: 10.5.0.1

volumes:
    sumo_home_vol:
#     sumo_dep_vol:
